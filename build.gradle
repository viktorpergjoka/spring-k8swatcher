import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'java-library'
    id 'org.springframework.boot' version '3.5.4' apply false
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.diffplug.spotless' version '7.2.1'
    id 'maven-publish'
    id 'signing'
    id 'net.thebugmc.gradle.sonatype-central-portal-publisher' version '1.2.4'
}



group = 'io.k8swatcher'
version = '1.0.6'


java {
    sourceCompatibility = '17'
    withJavadocJar()
    withSourcesJar()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom SpringBootPlugin.BOM_COORDINATES
    }
}

ext{
    fabric8Version = '7.3.1'
}

dependencies {

    api "io.fabric8:kubernetes-client:${fabric8Version}"
    implementation 'jakarta.annotation:jakarta.annotation-api:3.0.0'
    implementation 'org.springframework.boot:spring-boot-autoconfigure'
    implementation 'org.springframework:spring-context-support'
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "io.fabric8:kubernetes-server-mock:${fabric8Version}"
    testImplementation "io.fabric8:mockwebserver:${fabric8Version}"
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-parameters")
}

apply plugin: "com.diffplug.spotless"

spotless {
    format 'misc', {
        target '*.gradle', '.gitattributes', '.gitignore'

        trimTrailingWhitespace()
        endWithNewline()
    }
    java {
        licenseHeaderFile 'spotless.license.java', 'package '
        formatAnnotations()
        removeUnusedImports()
        palantirJavaFormat()
    }
}


signing {
    useGpgCmd()
}

centralPortal{
    pom {
        name= "Viktor Pergjoka"
        description="Spring Boot library for watching Kubernetes resources with Informers. Create Kubernetes Controllers" +
                " and Kubernetes Operators"
        url = "https://github.com/viktorpergjoka/spring-k8swatcher"
        licenses{
            license{
                name ="The Apache License, Version 2.0"
                url="http://www.apache.org/licenses/LICENSE-2.0.txt"
            }
        }
        developers{
            developer{
                name="Viktor Pergjoka"
                email="viktor.pergjoka@gmail.com"
            }
        }
        scm{
            connection ="scm:git:https://github.com/viktorpergjoka/spring-k8swatcher"
            developerConnection ="scm:git:https://github.com/viktorpergjoka/spring-k8swatcher"
            url= "https://github.com/viktorpergjoka/spring-k8swatcher"
        }
    }
}

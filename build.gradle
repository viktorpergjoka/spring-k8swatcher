import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'java-library'
    id 'org.springframework.boot' version '3.3.0' apply false
    id 'io.spring.dependency-management' version '1.1.5'
    id 'com.diffplug.spotless' version '7.0.0.BETA2'
    id 'maven-publish'
    id 'signing'
    id "io.github.gradle-nexus.publish-plugin" version "2.0.0"
}



group = 'io.k8swatcher'
version = '0.0.2'

java {
    sourceCompatibility = '17'
    withJavadocJar()
    withSourcesJar()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom SpringBootPlugin.BOM_COORDINATES
    }
}

dependencies {

    api 'io.fabric8:kubernetes-client:6.13.4'
    implementation 'jakarta.annotation:jakarta.annotation-api:3.0.0'
    implementation 'org.springframework.boot:spring-boot-autoconfigure'
    implementation 'org.springframework:spring-context-support'
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-parameters")
}

apply plugin: "com.diffplug.spotless"

spotless {
    ratchetFrom 'origin/main'

    format 'misc', {
        target '*.gradle', '.gitattributes', '.gitignore'

        trimTrailingWhitespace()
        endWithNewline()
    }
    java {
        formatAnnotations()
        removeUnusedImports()
        palantirJavaFormat()
    }
}


publishing {
    publications{
        mavenJava(MavenPublication) {
            from(components.java)
            artifactId 'spring-k8swatcher'
            pom {
                name= "Viktor Pergjoka"
                description="Spting Boot Kubernetes Watcher"
                url = "https://github.com/viktorpergjoka/spring-k8swatcher"
                licenses{
                    license{
                        name ="The Apache License, Version 2.0"
                        url="http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers{
                    developer{
                        name="Viktor Pergjoka"
                        email="viktor.pergjoka@gmail.com"
                    }
                }
                scm{
                    //'git' for Git, 'svn' for Subversion, and so on...
                    connection ="scm:git:[http link to repository]"
                    developerConnection ="scm:git:https://github.com/viktorpergjoka/spring-k8swatcher"
                    url= "https://github.com/viktorpergjoka/spring-k8swatcher"
                }
            }
        }
    }
}


nexusPublishing {
    repositories {
        myNexus {
            nexusUrl = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
            snapshotRepositoryUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
